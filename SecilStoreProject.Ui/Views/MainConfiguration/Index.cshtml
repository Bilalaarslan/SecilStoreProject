@model IEnumerable<SecilStoreProject.Entities.Entities.ConfigurationModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Configuration List</h1>



<p>
    <a asp-action="CreateConfiguration">Create New Configuration</a>
    <br />
    <br />

    <input type="text" id="searchInput" placeholder="Search by Name">
    <br />

</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Value)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ApplicationName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Value)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ApplicationName)
                </td>
                <td>
                    <a asp-controller="MainConfiguration" asp-action="UpdateConfiguration" asp-route-id="@item.Id" type="button" class="btn btn-secondary">
                        Update
                    </a>
                    
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    
    const searchInput = document.getElementById('searchInput');
    const tableRows = document.querySelectorAll('tbody tr');

    searchInput.addEventListener('input', function () {
        const searchText = this.value.toLowerCase();

        tableRows.forEach(row => {
            const nameColumnText = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
            if (nameColumnText.includes(searchText)) {
                row.style.display = 'table-row';
            } else {
                row.style.display = 'none';
            }
        });
    });
</script>
